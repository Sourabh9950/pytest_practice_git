{"name": "test_online_regi", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_file_05.Test_cred_05 object at 0x00000270F9107790>\n\n    def test_online_regi(self):\n        import time\n    \n        from selenium import webdriver\n        from selenium.webdriver.common.by import By\n        from selenium.webdriver.support.select import Select\n    \n        chrome_options = webdriver.ChromeOptions()\n        chrome_options.add_argument(\"headless\")\n        # driver = webdriver.Chrome()\n        # from selenium.webdriver.chrome.options import Options\n        # options = Options()\n        # options.binary_location = ''\n        driver = webdriver.Chrome(options=chrome_options)\n        driver.maximize_window()\n        # options=webdriver.ChromeOptions()\n        # options.add_argument(\"headless\")\n    \n        driver.get(\"https://automation.credence.in/login\")\n        driver.find_element(By.XPATH, \"//input[@name='email']\").send_keys(\"Credencetest@test.com\")\n        driver.find_element(By.CSS_SELECTOR, \"input[id='password']\").send_keys(\"Credence@123\")\n        # Click Login button\n        driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n    \n        # Click on Product--Macbook\n        driver.find_element(By.XPATH, \"/html/body/div/div[2]/div[3]/div/div/a[2]/h3\").click()\n        # Click on add to cart\n        driver.find_element(By.XPATH, \"//input[@value='Add to Cart']\").click()\n        # Click on Continue Shopping\n        driver.find_element(By.XPATH, \"//a[@class='btn btn-primary btn-lg']\").click()\n        # Click on Product--Headphone\n        driver.find_element(By.XPATH, \"//h3[normalize-space()='Headphones']\").click()\n        # Click on add to cart\n        driver.find_element(By.XPATH, \"//input[@value='Add to Cart']\").click()\n        # Click on Continue Shopping\n        driver.find_element(By.XPATH, \"//a[@class='btn btn-primary btn-lg']\").click()\n        # Click on Product--Ipad\n        driver.find_element(By.XPATH, \"//h3[normalize-space()='Apple iPad Retina']\").click()\n        # Click on add to cart\n        driver.find_element(By.XPATH, \"//input[@value='Add to Cart']\").click()\n        # Select Quality dropdown value for product 1\n        product_quantity1 = Select(driver.find_element(By.XPATH, \"//tbody/tr[1]/td[3]/select\"))\n        product_quantity1.select_by_index(3)\n        # Select Quality dropdown value for product 2\n        product_quantity2 = Select(driver.find_element(By.XPATH, \"//tbody/tr[2]/td[3]/select\"))\n        product_quantity2.select_by_index(3)\n        # Select Quality dropdown value for product 3\n        product_quantity3 = Select(driver.find_element(By.XPATH, \"//tbody/tr[3]/td[3]/select\"))\n        product_quantity3.select_by_index(2)\n    \n        l = len(driver.find_elements(By.XPATH, \"//tbody/tr/td[4]\"))\n        # l=6\n    \n        Product_Price_List = []\n        for r in range(1, l - 2):\n            var1 = driver.find_element(By.XPATH, \"//tbody/tr[\" + str(r) + \"]/td[4]\").text\n            product_price = (var1[1:])\n            Product_Price_List.append(float(product_price))\n    \n        Exp_Subtotal = round((sum(Product_Price_List)), 2)\n        # Exp_Subtotal-->11999.889999999998\n        # Exp_Subtotal-->11999.89\n        print(\"Exp_Subtotal-->\" + str(Exp_Subtotal))\n    \n        print(Product_Price_List)\n    \n        System_Value = []\n    \n        for r in range(l - 2, l + 1):\n            var2 = driver.find_element(By.XPATH, \"//tbody/tr[\" + str(r) + \"]/td[4]\").text\n            var3 = var2.replace(',', '')\n            system_price = (var3[1:])\n            System_Value.append(float(system_price))\n    \n        print(System_Value)\n    \n        if Exp_Subtotal == System_Value[0]:\n            print(\"subtotal is match\")\n            assert True\n    \n        else:\n            print(\"subtotal not match\")\n>           assert False\nE           assert False\n\ntest_file_05.py:84: AssertionError"}, "start": 1690744008447, "stop": 1690744027255, "uuid": "8fdd313c-5fe2-4e54-b700-dce8f7f4cd14", "historyId": "fc8aceda020ea1b7c61ffcb3c384faa5", "testCaseId": "fc8aceda020ea1b7c61ffcb3c384faa5", "fullName": "test_file_05.Test_cred_05#test_online_regi", "labels": [{"name": "suite", "value": "test_file_05"}, {"name": "subSuite", "value": "Test_cred_05"}, {"name": "host", "value": "DESKTOP-HSVG31B"}, {"name": "thread", "value": "9604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file_05"}]}